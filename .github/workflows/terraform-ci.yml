name: Terraform CI

on:
  push:
    branches: [ main ]
    paths:
      - 'modules/**'
      - 'examples/**'
      - '.github/workflows/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'modules/**'
      - 'examples/**'

jobs:
  validate:
    name: Validate Terraform
    runs-on: ubuntu-latest
    strategy:
      matrix:
        module:
          - vnet
          - storage-account
          - log-analytics
          - aks-cluster
          - app-service
        
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.5.6
    
    - name: Terraform Format Check
      id: fmt
      run: |
        cd modules/${{ matrix.module }}
        terraform fmt -check -recursive
    
    - name: Terraform Init
      id: init
      run: |
        cd modules/${{ matrix.module }}
        terraform init -backend=false
    
    - name: Terraform Validate
      id: validate
      run: |
        cd modules/${{ matrix.module }}
        terraform validate

  examples:
    name: Validate Examples
    runs-on: ubuntu-latest
    needs: validate
    strategy:
      matrix:
        example:
          - vnet-example
          - full-stack
        
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.5.6
    
    - name: Terraform Format Check
      id: fmt
      run: |
        cd examples/${{ matrix.example }}
        terraform fmt -check -recursive
    
    - name: Terraform Init
      id: init
      run: |
        cd examples/${{ matrix.example }}
        terraform init -backend=false
    
    - name: Terraform Validate
      id: validate
      run: |
        cd examples/${{ matrix.example }}
        terraform validate

  security_scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: validate
    
    steps:
    - uses: actions/checkout@v3
      
    - name: Run tfsec
      uses: aquasecurity/tfsec-action@v1.0.0
      with:
        soft_fail: true
        
    - name: Run checkov
      uses: bridgecrewio/checkov-action@master
      with:
        directory: .
        framework: terraform
        quiet: true
        soft_fail: true
        skip_check: CKV_AZURE_35,CKV_AZURE_43

  docs:
    name: Update Documentation
    runs-on: ubuntu-latest
    needs: [validate, examples, security_scan]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.head.ref }}
        token: ${{ secrets.GITHUB_TOKEN }}
      
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.5.6
        
    - name: Install terraform-docs
      run: |
        curl -Lo ./terraform-docs.tar.gz https://github.com/terraform-docs/terraform-docs/releases/download/v0.16.0/terraform-docs-v0.16.0-linux-amd64.tar.gz
        tar -xzf terraform-docs.tar.gz
        chmod +x terraform-docs
        sudo mv terraform-docs /usr/bin/
    
    - name: Generate module documentation
      run: |
        for module in modules/*; do
          if [ -d "$module" ]; then
            echo "Generating docs for $module"
            terraform-docs markdown table --output-file README.md --output-mode inject "$module"
          fi
        done
        
    - name: Commit documentation changes
      uses: stefanzweifel/git-auto-commit-action@v4
      with:
        commit_message: "docs: Update module documentation"
        file_pattern: modules/*/README.md
